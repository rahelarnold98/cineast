plugins {
    id 'application'
}


application {
    mainClassName = 'org.vitrivr.cineast.api.Main'
    applicationDefaultJvmArgs = ["-Xms1G", "-Xmx2G"]
}

distributions {
    main {
        contents {
            from('../cineast.json') {
                into 'bin'
            }
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generatedFilesBaseDir = "$projectDir/build/generated/"
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += "$projectDir/build/generated/main/grpc"
            srcDirs += "$projectDir/build/generated/main/java"
        }
        proto {
            srcDirs += "cineast-proto/src/main/protobuf"
        }
    }
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


task fatJar(type: Jar) {
    archiveClassifier = 'full'
    manifest {
        attributes 'Main-Class': 'org.vitrivr.cineast.api.Main'
        attributes 'Multi-Release': 'true'
		attributes 'Implementation-Version': '1.xx'
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

dependencies {
    implementation('io.javalin:javalin-bundle:3.+'){
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.+'
    implementation group: 'de.svenkubiak', name: 'jBCrypt', version: '0.4.+'
}


