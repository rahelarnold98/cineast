plugins {
    id 'application'
}


application {
    mainClassName = 'GetRandomThumbnails'
    applicationDefaultJvmArgs = ["-Xms1G", "-Xmx2G"]
}

dependencies {
    compile project(':cineast-core')
    compile project(':cineast-api')
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java',
            version: '3.141.59'
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-java
    compile group: 'io.cucumber', name: 'cucumber-java', version: '5.6.0'
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-junit
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '5.6.0'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}


task(runThumbnailsComplete, dependsOn: 'classes', type: JavaExec) {
    main = 'randomThumbnails.GetRandomThumbnailsComplete'
    classpath = sourceSets.main.runtimeClasspath
}

task(runThumbnailsTransparent, dependsOn: 'classes', type: JavaExec) {
    main = 'randomThumbnails.GetRandomThumbnailsTransparent'
    classpath = sourceSets.main.runtimeClasspath
}

task(runRobot, dependsOn: 'classes', type: JavaExec) {
    main = 'evaluationQueries.sketches.WithRobot'
    classpath = sourceSets.main.runtimeClasspath
}

task(runQueries, dependsOn: 'classes', type: JavaExec) {
    main = 'evaluationQueries.sketches.AutomatedQueriesOfSketches'
    classpath = sourceSets.main.runtimeClasspath
}

shadowJar {
    mergeServiceFiles()
}




